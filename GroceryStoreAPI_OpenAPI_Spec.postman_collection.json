{
	"info": {
		"_postman_id": "9fa062d6-8740-4a71-a050-9b5a5c7c2b45",
		"name": "Grocery Store API (Open API Spec)",
		"description": "This API allows you to place a grocery order which will be ready for pick-up in the store. The API is available at https://simple-grocery-store-api.glitch.me\nA fuller description is located at (Simple Grocery Store API)[https://github.com/vdespa/Postman-Complete-Guide-API-Testing/blob/main/simple-grocery-store-api.md]\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22422515"
	},
	"item": [
		{
			"name": "status",
			"item": [
				{
					"name": "Returns the status of the API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"let respBody= pm.response.json();\r",
									"pm.test(\"Received success response\", function()\r",
									"{ tests[\"status received is: \" + respBody.status]= pm.expect(respBody.status).not.equal(null);\r",
									"});\r",
									"\r",
									"pm.test(\"Schema is valid\", function () {\r",
									"  var schema = {\r",
									"    type: \"object\",\r",
									"    properties: {\r",
									"      status: {\r",
									"        type: \"string\"\r",
									"      }\r",
									"    },\r",
									"    required: [\"status\"],\r",
									"  };\r",
									"\r",
									"  var response = pm.response.json();\r",
									"  pm.expect(tv4.validate(response, schema)).to.be.true;\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status"
							]
						},
						"description": "Status UP indicates that the API is running as expected.\nNo response or any other response indicates that the API is not functioning correctly.\n"
					},
					"response": [
						{
							"name": "Status is UP",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"status\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "products",
			"item": [
				{
					"name": "{productId}",
					"item": [
						{
							"name": "Get a product",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Check response received is not null\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.id).to.not.eql(null);\r",
											"     pm.expect(jsonData.category).to.eql(\"meat-seafood\");\r",
											"});\r",
											"pm.test(\"Content-Type is present\", function () {\r",
											"    pm.response.to.have.header(\"Content-Type\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products/:productId?product-label=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products",
										":productId"
									],
									"query": [
										{
											"key": "product-label",
											"value": "true",
											"description": "Returns the product label in PDF format."
										}
									],
									"variable": [
										{
											"key": "productId",
											"value": "2177",
											"description": "Specifies the product's id you wish to retrieve."
										}
									]
								},
								"description": "Returns a single product from the inventory."
							},
							"response": [
								{
									"name": "Indicates successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/:productId?product-label=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":productId"
											],
											"query": [
												{
													"key": "product-label",
													"value": "<boolean>",
													"description": "Returns the product label in PDF format."
												}
											],
											"variable": [
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"<integer>\",\n  \"category\": \"<string>\",\n  \"name\": \"<string>\",\n  \"manufacturer\": \"<string>\",\n  \"price\": \"<number>\",\n  \"current-stock\": \"<number>\",\n  \"inStock\": \"<boolean>\"\n}"
								},
								{
									"name": "Indicates that there is no entity with the specified id associated with the API client.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/products/:productId?product-label=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"products",
												":productId"
											],
											"query": [
												{
													"key": "product-label",
													"value": "<boolean>",
													"description": "Returns the product label in PDF format."
												}
											],
											"variable": [
												{
													"key": "productId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get all products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"meat-seafood\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/products?category=meat-seafood&results=10&available=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"products"
							],
							"query": [
								{
									"key": "category",
									"value": "meat-seafood",
									"description": "Specifies the category of products you want to be returned. It can be one of: meat-seafood, fresh-produce, candy, bread-bakery, dairy, eggs, coffee."
								},
								{
									"key": "results",
									"value": "10",
									"description": "Specifies the number of results you want. Must be number between 1 and 20. By default, only 20 products will be displayed."
								},
								{
									"key": "available",
									"value": "true",
									"description": "Specifies the availability of the products. By default, all products will be displayed."
								}
							]
						},
						"description": "Returns a list of products from the inventory."
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/products?category=<string>&results=<integer>&available=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"products"
									],
									"query": [
										{
											"key": "category",
											"value": "<string>",
											"description": "Specifies the category of products you want to be returned. It can be one of: meat-seafood, fresh-produce, candy, bread-bakery, dairy, eggs, coffee."
										},
										{
											"key": "results",
											"value": "<integer>",
											"description": "Specifies the number of results you want. Must be number between 1 and 20. By default, only 20 products will be displayed."
										},
										{
											"key": "available",
											"value": "<boolean>",
											"description": "Specifies the availability of the products. By default, all products will be displayed."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<number>\",\n    \"category\": \"<string>\",\n    \"name\": \"<string>\",\n    \"inStock\": \"<boolean>\"\n  },\n  {\n    \"id\": \"<number>\",\n    \"category\": \"<string>\",\n    \"name\": \"<string>\",\n    \"inStock\": \"<boolean>\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "carts",
			"item": [
				{
					"name": "{cartId}",
					"item": [
						{
							"name": "items",
							"item": [
								{
									"name": "{itemId}",
									"item": [
										{
											"name": "Allows modifying information about an item in the cart.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"quantity\": \"11\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carts",
														":cartId",
														"items",
														":itemId"
													],
													"variable": [
														{
															"key": "cartId",
															"value": "v_211ge9w8BtdzaUb_b2z",
															"description": "(Required) Specifies the id of the cart"
														},
														{
															"key": "itemId",
															"value": "607913923",
															"description": "(Required) Specifies the id of the item"
														}
													]
												},
												"description": "The request body needs to be in JSON format."
											},
											"response": [
												{
													"name": "Indicates that the item has been updated successfully.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"quantity\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carts",
																":cartId",
																"items",
																":itemId"
															],
															"variable": [
																{
																	"key": "cartId"
																},
																{
																	"key": "itemId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Indicates that the parameters provided are invalid.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"quantity\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carts",
																":cartId",
																"items",
																":itemId"
															],
															"variable": [
																{
																	"key": "cartId"
																},
																{
																	"key": "itemId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												},
												{
													"name": "Indicates that there is no entity with the specified id associated with the API client.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"quantity\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carts",
																":cartId",
																"items",
																":itemId"
															],
															"variable": [
																{
																	"key": "cartId"
																},
																{
																	"key": "itemId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Replace an item in the cart.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"1709\",\n  \"quantity\": \"10\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carts",
														":cartId",
														"items",
														":itemId"
													],
													"variable": [
														{
															"key": "cartId",
															"value": "v_211ge9w8BtdzaUb_b2z",
															"description": "(Required) Specifies the id of the cart"
														},
														{
															"key": "itemId",
															"value": "607913923",
															"description": "(Required) Specifies the id of the item"
														}
													]
												},
												"description": "The request body needs to be in JSON format."
											},
											"response": [
												{
													"name": "Indicates that the item has been updated successfully.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carts",
																":cartId",
																"items",
																":itemId"
															],
															"variable": [
																{
																	"key": "cartId"
																},
																{
																	"key": "itemId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Indicates that the parameters provided are invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carts",
																":cartId",
																"items",
																":itemId"
															],
															"variable": [
																{
																	"key": "cartId"
																},
																{
																	"key": "itemId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												},
												{
													"name": "Indicates that there is no entity with the specified id associated with the API client.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carts",
																":cartId",
																"items",
																":itemId"
															],
															"variable": [
																{
																	"key": "cartId"
																},
																{
																	"key": "itemId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Deletes an item in the cart.",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 204\", function () {\r",
															"    pm.response.to.have.status(204);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carts",
														":cartId",
														"items",
														":itemId"
													],
													"variable": [
														{
															"key": "cartId",
															"value": "v_211ge9w8BtdzaUb_b2z",
															"description": "(Required) Specifies the id of the cart"
														},
														{
															"key": "itemId",
															"value": "341184947",
															"description": "(Required) Specifies the id of the item"
														}
													]
												}
											},
											"response": [
												{
													"name": "Indicates that the item has been deleted successfully.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carts",
																":cartId",
																"items",
																":itemId"
															],
															"variable": [
																{
																	"key": "cartId"
																},
																{
																	"key": "itemId"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Indicates that there is no entity with the specified id associated with the API client.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"carts",
																":cartId",
																"items",
																":itemId"
															],
															"variable": [
																{
																	"key": "cartId"
																},
																{
																	"key": "itemId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"error\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get cart items",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carts/:cartId/items",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carts",
												":cartId",
												"items"
											],
											"variable": [
												{
													"key": "cartId",
													"value": "EFwesIuip3T_t2p5SLaJo",
													"description": "(Required) Specifies the id of the cart"
												}
											]
										},
										"description": "Returns the items in a cart."
									},
									"response": [
										{
											"name": "Indicates a successful response.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carts/:cartId/items",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carts",
														":cartId",
														"items"
													],
													"variable": [
														{
															"key": "cartId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"<string>\",\n    \"productId\": \"<integer>\",\n    \"quantity\": \"<integer>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"productId\": \"<integer>\",\n    \"quantity\": \"<integer>\"\n  }\n]"
										},
										{
											"name": "Indicates that there is no entity with the specified id associated with the API client.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/carts/:cartId/items",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carts",
														":cartId",
														"items"
													],
													"variable": [
														{
															"key": "cartId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Add an item to cart",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"let respBody= pm.response.json();\r",
													"pm.test(\"Item created & id received\", function()\r",
													"{ \r",
													"    tests[\"item is created: \" + respBody.created]= pm.expect(respBody.created).not.equal(null);\r",
													"    tests[\"itemId is: \" + respBody.itemId]= pm.expect(respBody.itemId).not.equal(null);\r",
													"\r",
													"\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"productId\": \"1709\",\n  \"quantity\":5\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/carts/:cartId/items",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carts",
												":cartId",
												"items"
											],
											"variable": [
												{
													"key": "cartId",
													"value": "EFwesIuip3T_t2p5SLaJo",
													"description": "(Required) Specifies the id of the cart"
												}
											]
										},
										"description": "Allows the addition of items to an existing cart. Only one item can be added at a time."
									},
									"response": [
										{
											"name": "Indicates that the item has been added successfully.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": 1\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carts/:cartId/items",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carts",
														":cartId",
														"items"
													],
													"variable": [
														{
															"key": "cartId"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"created\": \"<boolean>\",\n  \"itemId\": \"<string>\"\n}"
										},
										{
											"name": "Indicates that the parameters provided are invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"productId\": \"<integer>\",\n  \"quantity\": 1\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/carts/:cartId/items",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"carts",
														":cartId",
														"items"
													],
													"variable": [
														{
															"key": "cartId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Returns a cart",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carts/:cartId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carts",
										":cartId"
									],
									"variable": [
										{
											"key": "cartId",
											"value": "GMDa34bOZz8aSCOBrqkLe",
											"description": "(Required) Specifies the id of the cart"
										}
									]
								},
								"description": "Get a cart"
							},
							"response": [
								{
									"name": "Indicates successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carts/:cartId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carts",
												":cartId"
											],
											"variable": [
												{
													"key": "cartId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"created\": \"<dateTime>\",\n  \"items\": [\n    {\n      \"id\": \"<string>\",\n      \"productId\": \"<integer>\",\n      \"quantity\": \"<integer>\"\n    },\n    {\n      \"id\": \"<string>\",\n      \"productId\": \"<integer>\",\n      \"quantity\": \"<integer>\"\n    }\n  ]\n}"
								},
								{
									"name": "Indicates that there is no entity with the specified id associated with the API client.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/carts/:cartId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"carts",
												":cartId"
											],
											"variable": [
												{
													"key": "cartId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create a new cart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/carts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"carts"
							]
						},
						"description": "To create a new cart, submit an empty POST request to the /carts endpoint."
					},
					"response": [
						{
							"name": "Indicates that the cart has been created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/carts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"carts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created\": \"<boolean>\",\n  \"cartId\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "orders",
			"item": [
				{
					"name": "{orderId}",
					"item": [
						{
							"name": "Updates the comment or customer name associated with an order",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "9a620a7fef4ec9fb8d196faac9bdfd668f788f40a6173000e89a7c53a027aed2",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"customerName\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId",
											"value": "Bnf_6umb4QqOozL_EeY9e",
											"description": "(Required) Specifies the id of the order"
										}
									]
								},
								"description": "The request body needs to be in JSON format."
							},
							"response": [
								{
									"name": "Indicates that the order has been updated successfully.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerName\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Indicates that the parameters provided are invalid.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerName\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Indicates that the request has not been authenticated. Check the response body for additional details.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerName\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Indicates that there is no entity with the specified id associated with the API client.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"customerName\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/orders/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete an order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {\r",
											"    pm.response.to.have.status(204);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "9a620a7fef4ec9fb8d196faac9bdfd668f788f40a6173000e89a7c53a027aed2",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders/:orderId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders",
										":orderId"
									],
									"variable": [
										{
											"key": "orderId",
											"value": "9hCn9yXvj7DDoX98m7o53",
											"description": "(Required) Specifies the id of the order"
										}
									]
								}
							},
							"response": [
								{
									"name": "Indicates that the order has been successfully deleted.",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/orders/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Indicates that the parameters provided are invalid.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Indicates that the request has not been authenticated. Check the response body for additional details.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								},
								{
									"name": "Indicates that there is no entity with the specified id associated with the API client.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/orders/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"orders",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"error\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get all /orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "9a620a7fef4ec9fb8d196faac9bdfd668f788f40a6173000e89a7c53a027aed2",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "Returns all orders created by the API client"
					},
					"response": [
						{
							"name": "Indicates a successful response.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"<string>\",\n    \"items\": {\n      \"id\": \"<string>\",\n      \"productId\": \"<integer>\",\n      \"quantity\": \"<integer>\"\n    },\n    \"customerName\": \"<string>\",\n    \"created\": \"<dateTime>\",\n    \"comment\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"items\": {\n      \"id\": \"<string>\",\n      \"productId\": \"<integer>\",\n      \"quantity\": \"<integer>\"\n    },\n    \"customerName\": \"<string>\",\n    \"created\": \"<dateTime>\",\n    \"comment\": \"<string>\"\n  }\n]"
						},
						{
							"name": "Indicates that the request has not been authenticated. Check the response body for additional details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a new order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "9a620a7fef4ec9fb8d196faac9bdfd668f788f40a6173000e89a7c53a027aed2",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"cartId\": \"GMDa34bOZz8aSCOBrqkLe\",\n  \"customerName\": \"Jeon Jungkook\",\n  \"comment\": \"I want to eat meat!\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						},
						"description": "The request body needs to be in JSON format. Once the order has been successfully submitted, the cart is deleted."
					},
					"response": [
						{
							"name": "Indicates that the order has been created successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cartId\": \"<string>\",\n  \"customerName\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"created\": \"<boolean>\",\n  \"orderId\": \"<string>\"\n}"
						},
						{
							"name": "Indicates that the parameters provided are invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cartId\": \"<string>\",\n  \"customerName\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Indicates that the request has not been authenticated. Check the response body for additional details.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cartId\": \"<string>\",\n  \"customerName\": \"<string>\",\n  \"comment\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/orders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orders"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "api-clients",
			"item": [
				{
					"name": "Register a new API client",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientName\": \"Postman on Krittika's computer\",\n  \"clientEmail\": \"abcd123@gmail.com\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api-clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api-clients"
							]
						}
					},
					"response": [
						{
							"name": "Indicates that the client has been registered successfully.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clientName\": \"<string>\",\n  \"clientEmail\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-clients"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"accessToken\": \"<string>\"\n}"
						},
						{
							"name": "Indicates that the parameters provided are invalid.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clientName\": \"<string>\",\n  \"clientEmail\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-clients"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						},
						{
							"name": "Indicates that an API client has already been registered with this email address.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clientName\": \"<string>\",\n  \"clientEmail\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api-clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api-clients"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"<string>\"\n}"
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://simple-grocery-store-api.glitch.me"
		}
	]
}